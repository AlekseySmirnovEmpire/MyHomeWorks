#include <iostream>

void initArray(int arr[][6], bool VIP, int count) {
	for (int i = 0; i < 2; i++) {
		for (int j = 0; j < 6; j++) {
			arr[i][j] = count;
		}
	}
	if (VIP) {
		arr[0][0]++;
		arr[0][1]++;
	}
}

void outputArray(int arr[][6]) {
	for (int i = 0; i < 2; i++) {
		for (int j = 0; j < 6; j++) {
			std::cout << arr[i][j] << " ";
		}
		std::cout << std::endl;
	}
}

int main() {
	setlocale(LC_ALL, ".UTF8");

	/*По поводу успешного прохождения двумерных массивов собирается банкет, организуется стол на 12 персон, 
	2 из них - это места VIP, они расположены рядом друг к другу во главе стола. Стол протяжённый в длину, 
	места расположены в два ряда. Каждый пришедший должен быть “упакован” соответствующим образом. 
	Во-первых столовые приборы - их три на каждого человека (вилка, ложка, нож), плюс одна маленькая дополнительная 
	ложечка для VIP-персон, для десерта. Это необходимо обеспечить. Следом тарелки, каждому по две - для 
	первого и второго блюда, для VIP персон +1 тарелка для десерта. Ну и конечно стул - один для каждого, минимум! 
	Заведите соответствующие двумерные массивы для количества приборов, посуды и стульев и проинициализируйте их как следует.

	Однако, это ещё не всё. В ходе банкета, уже после инициализации, происходят некоторые события. 
	Пришедшая на 5-ое место первого ряда дама пришла вместе с ребёнком и поэтому на данное место был приставлен 
	ещё один стул. С третьего места во втором ряду в неизвестном направлении была украдена ложка. После этого 
	одна из VIP персон (любая) поделилась своей ложкой с тем у кого она пропала, а сам стал есть суп десертной. 
	За ненадобностью официант забрал у него одну десертную тарелку, ибо есть десерт ложкой, которая побывала уже 
	в супе - не комильфо. Больше без происшествий!*/

	int spoons[2][6], forks[2][6], dishes[2][6], chairs[2][6], knifes[2][6];

	initArray(knifes, false, 3);

	initArray(forks, false, 3);

	initArray(spoons, true, 3);

	initArray(dishes, true, 2);

	initArray(chairs, false, 1);

	chairs[0][4]++;

	spoons[0][0]--;
	
	dishes[0][0]--;

	std::cout << "Spoons: " << std::endl;
	outputArray(spoons);

	std::cout << "Forks: " << std::endl;
	outputArray(forks);

	std::cout << "Knifes: " << std::endl;
	outputArray(knifes);

	std::cout << "Dishes: " << std::endl;
	outputArray(dishes);

	std::cout << "Chairs: " << std::endl;
	outputArray(chairs);
}